{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/AllUsersPage/AllUsersPage.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../redux/users/users.actions';\nimport handleSorting from '../../services/handleSorting';\nimport UserPanel from './UserPanel/UserPanel.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport SearchBox from '../../components/SearchBox/SearchBox.component';\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup.component';\nimport Pagination from \"../../components/Pagination/Pagination.component\";\nimport './AllUsersPage.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsPerPage = 16;\n\nconst AllUsersPage = _ref => {\n  _s();\n\n  var _users$filter;\n\n  let {\n    getUsers,\n    user: {\n      users,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n  const [page, setPage] = useState(1);\n  const [fetchSearch, setSearch] = useState('');\n  const [sortType, setSortType] = useState('Popular');\n\n  const handlePaginationChange = (e, value) => setPage(value);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearch(e.target.value);\n    setPage(1);\n  };\n\n  return loading || users === null ? /*#__PURE__*/_jsxDEV(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainbar\",\n      className: \"users-page fc-black-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"headline\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline-count\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [new Intl.NumberFormat('en-IN').format(users.length), \" users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-box pl16 pr16 pb16\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n          placeholder: 'filter by user',\n          handleChange: handleChange,\n          width: '200px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          buttons: ['Popular', 'Name', 'Active', 'New Users'],\n          selected: sortType,\n          setSelected: setSortType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-browser\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-layout\",\n          children: (_users$filter = users.filter(user => user.username.toLowerCase().includes(fetchSearch.toLowerCase()))) === null || _users$filter === void 0 ? void 0 : _users$filter.sort(handleSorting(sortType, 'users')).slice((page - 1) * itemsPerPage, (page - 1) * itemsPerPage + itemsPerPage).map((user, index) => /*#__PURE__*/_jsxDEV(UserPanel, {\n            user: user\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        page: page,\n        itemList: users.filter(user => user.username.toLowerCase().includes(fetchSearch.toLowerCase())),\n        itemsPerPage: itemsPerPage,\n        handlePaginationChange: handlePaginationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllUsersPage, \"b1cQjz//Gx9OPGsDnIbk/8NeRQI=\");\n\n_c = AllUsersPage;\nAllUsersPage.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getUsers\n})(AllUsersPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsersPage\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/AllUsersPage/AllUsersPage.component.jsx"],"names":["React","Fragment","useEffect","useState","connect","PropTypes","getUsers","handleSorting","UserPanel","Spinner","SearchBox","ButtonGroup","Pagination","itemsPerPage","AllUsersPage","user","users","loading","page","setPage","fetchSearch","setSearch","sortType","setSortType","handlePaginationChange","e","value","handleChange","preventDefault","target","Intl","NumberFormat","format","length","filter","username","toLowerCase","includes","sort","slice","map","index","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getUsers} from '../../redux/users/users.actions';\nimport handleSorting from '../../services/handleSorting';\n\nimport UserPanel from './UserPanel/UserPanel.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport SearchBox from '../../components/SearchBox/SearchBox.component';\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup.component';\nimport Pagination from \"../../components/Pagination/Pagination.component\";\n\nimport './AllUsersPage.styles.scss';\n\nconst itemsPerPage = 16;\n\nconst AllUsersPage = ({getUsers, user: {users, loading}}) => {\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  const [page, setPage] = useState(1);\n  const [fetchSearch, setSearch] = useState('');\n  const [sortType, setSortType] = useState('Popular');\n\n  const handlePaginationChange = (e, value) => setPage(value);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearch(e.target.value);\n    setPage(1)\n  };\n\n  return loading || users === null ? (\n    <Spinner type='page' width='75px' height='200px' />\n  ) : (\n    <Fragment>\n      <div id='mainbar' className='users-page fc-black-800'>\n        <h1 className='headline'>Users</h1>\n        <div className='headline-count'>\n          <span>\n            {new Intl.NumberFormat('en-IN').format(users.length)} users\n          </span>\n        </div>\n        <div className='users-box pl16 pr16 pb16'>\n          <SearchBox\n            placeholder={'filter by user'}\n            handleChange={handleChange}\n            width={'200px'}\n          />\n          <ButtonGroup\n            buttons={['Popular', 'Name', 'Active', 'New Users']}\n            selected={sortType}\n            setSelected={setSortType}\n          />\n        </div>\n        <div className='user-browser'>\n          <div className='grid-layout'>\n            {users\n              .filter((user) =>\n                user.username.toLowerCase().includes(fetchSearch.toLowerCase())\n              )\n              ?.sort(handleSorting(sortType, 'users'))\n              .slice((page - 1) * itemsPerPage, (page - 1) * itemsPerPage + itemsPerPage)\n              .map((user, index) => (\n                <UserPanel key={index} user={user} />\n              ))}\n          </div>\n        </div>\n        <Pagination\n          page={page}\n          itemList={users.filter((user) => user.username.toLowerCase().includes(fetchSearch.toLowerCase()))}\n          itemsPerPage={itemsPerPage}\n          handlePaginationChange={handlePaginationChange}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nAllUsersPage.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, { getUsers })(AllUsersPage);\n"]},"metadata":{},"sourceType":"module"}