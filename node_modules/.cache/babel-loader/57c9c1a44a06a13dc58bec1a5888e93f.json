{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/PostForm/AskForm/AskForm.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addPost } from '../../../redux/posts/posts.actions';\nimport MarkdownEditor from '../../../components/MarkdownEditor/MarkdownEditor.component';\nimport './AskForm.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AskForm = _ref => {\n  _s();\n\n  let {\n    addPost\n  } = _ref;\n  const [formData, setFormData] = useState({\n    title: '',\n    body: '',\n    tagname: ''\n  });\n  const markdownEditorRef = useRef(null);\n  const {\n    title,\n    body,\n    tagname\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    addPost({\n      title,\n      body,\n      tagname\n    });\n    setFormData({\n      title: '',\n      body: '',\n      tagname: ''\n    });\n    markdownEditorRef.current.cleanEditorState();\n  };\n\n  const updateConvertedContent = htmlConvertedContent => {\n    setFormData({ ...formData,\n      body: htmlConvertedContent\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-form p16 s-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-layout\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label s-label\",\n              children: [\"Title\", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title-desc fw-normal fs-caption\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"title-input s-input\",\n              type: \"text\",\n              name: \"title\",\n              value: title,\n              onChange: e => onChange(e),\n              id: \"title\",\n              placeholder: \"e.g. Is there an R function for finding the index of an element in a vector?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label s-label fc-black-800\",\n              children: [\"Body\", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"body-desc fw-normal fs-caption fc-black-800\",\n                children: \"Include all the information someone would need to answer your question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"s-textarea rich-text-editor-container\",\n              children: /*#__PURE__*/_jsxDEV(MarkdownEditor, {\n                ref: markdownEditorRef,\n                onChange: updateConvertedContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tag-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label s-label\",\n              children: [\"Tag Name\", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"tag-desc fw-normal fs-caption\",\n                children: \"Add up to 5 tags to describe what your question is about\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"tag-input s-input\",\n              type: \"text\",\n              name: \"tagname\",\n              value: tagname,\n              onChange: e => onChange(e),\n              id: \"tagname\",\n              placeholder: \"e.g. (ajax django string)\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-button mt32\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"s-btn s-btn__primary\",\n          id: \"submit-button\",\n          name: \"submit-button\",\n          children: \"Post your question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AskForm, \"tzdGvDe9a+EcmwLPgcA/ZUY40LQ=\");\n\n_c = AskForm;\nAskForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPost\n})(AskForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AskForm\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/PostForm/AskForm/AskForm.component.jsx"],"names":["React","Fragment","useState","useRef","connect","PropTypes","addPost","MarkdownEditor","AskForm","formData","setFormData","title","body","tagname","markdownEditorRef","onChange","e","target","name","value","onSubmit","preventDefault","current","cleanEditorState","updateConvertedContent","htmlConvertedContent","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useRef} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {addPost} from '../../../redux/posts/posts.actions';\nimport MarkdownEditor from '../../../components/MarkdownEditor/MarkdownEditor.component';\n\nimport './AskForm.styles.scss';\n\nconst AskForm = ({addPost}) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    body: '',\n    tagname: '',\n  });\n\n  const markdownEditorRef = useRef(null);\n\n  const {title, body, tagname} = formData;\n\n  const onChange = (e) =>\n    setFormData({...formData, [e.target.name]: e.target.value});\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    addPost({title, body, tagname});\n    setFormData({\n      title: '',\n      body: '',\n      tagname: '',\n    });\n    markdownEditorRef.current.cleanEditorState();\n  };\n\n  const updateConvertedContent = (htmlConvertedContent) => {\n    setFormData({...formData, body: htmlConvertedContent});\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className='question-form p16 s-card'>\n          <div className='question-layout'>\n            <div className='title-grid'>\n              <label className='form-label s-label'>\n                Title\n                <p className='title-desc fw-normal fs-caption'>\n                  Be specific and imagine you’re asking a question to another\n                  person\n                </p>\n              </label>\n              <input\n                className='title-input s-input'\n                type='text'\n                name='title'\n                value={title}\n                onChange={(e) => onChange(e)}\n                id='title'\n                placeholder='e.g. Is there an R function for finding the index of an element in a vector?'\n                required\n              />\n            </div>\n            <div className='body-grid'>\n              <label className='form-label s-label fc-black-800'>\n                Body\n                <p className='body-desc fw-normal fs-caption fc-black-800'>\n                  Include all the information someone would need to answer your\n                  question\n                </p>\n              </label>\n              <div className='s-textarea rich-text-editor-container'>\n                <MarkdownEditor\n                  ref={markdownEditorRef}\n                  onChange={updateConvertedContent}\n                />\n              </div>\n            </div>\n            <div className='tag-grid'>\n              <label className='form-label s-label'>\n                Tag Name\n                <p className='tag-desc fw-normal fs-caption'>\n                  Add up to 5 tags to describe what your question is about\n                </p>\n              </label>\n              <input\n                className='tag-input s-input'\n                type='text'\n                name='tagname'\n                value={tagname}\n                onChange={(e) => onChange(e)}\n                id='tagname'\n                placeholder='e.g. (ajax django string)'\n                required\n              />\n            </div>\n          </div>\n        </div>\n        <div className='post-button mt32'>\n          <button\n            className='s-btn s-btn__primary'\n            id='submit-button'\n            name='submit-button'\n          >\n            Post your question\n          </button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nAskForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {addPost})(AskForm);\n"]},"metadata":{},"sourceType":"module"}