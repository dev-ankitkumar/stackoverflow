{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/ProfilePage/ProfilePage.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { getProfile } from '../../redux/users/users.actions';\nimport UserSection from \"./UserSection/UserSection.component\";\nimport PageTitle from '../../components/PageTitle/PageTitle.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport ExternalUserDetails from \"./ExternalUserDetails/ExternalUserDetails.component\";\nimport UserActivity from \"./UserActivity/UserActivity.component\";\nimport './ProfilePage.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = _ref => {\n  _s();\n\n  let {\n    getProfile,\n    user: {\n      user,\n      loading\n    },\n    match\n  } = _ref;\n  useEffect(() => {\n    getProfile(match.params.id); // eslint-disable-next-line\n  }, [getProfile]);\n  return loading || user === null ? /*#__PURE__*/_jsxDEV(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: `User ${user.username} - CLONE Stack Overflow`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainbar\",\n      className: \"user-main-bar pl24 pt24\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid--cell s-navigation mb16\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"s-navigation--item is-selected\",\n            \"data-shortcut\": \"P\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"s-navigation--item\",\n            \"data-shortcut\": \"A\",\n            children: \"Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserSection, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-grid\",\n        children: [/*#__PURE__*/_jsxDEV(ExternalUserDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserActivity, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfilePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfilePage;\nProfilePage.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getProfile\n})(ProfilePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/ProfilePage/ProfilePage.component.jsx"],"names":["React","useEffect","Fragment","connect","Link","PropTypes","getProfile","UserSection","PageTitle","Spinner","ExternalUserDetails","UserActivity","ProfilePage","user","loading","match","params","id","username","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AAEA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,mBAAP,MAAgC,qDAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAO,2BAAP;;;AAEA,MAAMC,WAAW,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAACN,IAAAA,UAAD;AAAaO,IAAAA,IAAI,EAAE;AAACA,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAnB;AAAoCC,IAAAA;AAApC,GAA+C;AAClEd,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAV,CADc,CAEd;AACD,GAHQ,EAGN,CAACX,UAAD,CAHM,CAAT;AAKA,SAAOQ,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,QAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAG,QAAOA,IAAI,CAACK,QAAS;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,yBAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,GADL;AAEE,YAAA,SAAS,EAAC,gCAFZ;AAGE,6BAAc,GAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAa,YAAA,SAAS,EAAC,oBAAvB;AAA4C,6BAAc,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AA4BD,CAlCD;;GAAMD,W;;KAAAA,W;AAoCNA,WAAW,CAACO,SAAZ,GAAwB;AACtBb,EAAAA,UAAU,EAAED,SAAS,CAACe,IAAV,CAAeC,UADL;AAEtBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD;AAFD,CAAxB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB;;AAIA,eAAeV,OAAO,CAACoB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAP,CAAuCM,WAAvC,CAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { getProfile } from '../../redux/users/users.actions';\n\nimport UserSection from \"./UserSection/UserSection.component\";\nimport PageTitle from '../../components/PageTitle/PageTitle.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport ExternalUserDetails from \"./ExternalUserDetails/ExternalUserDetails.component\";\nimport UserActivity from \"./UserActivity/UserActivity.component\";\n\nimport './ProfilePage.styles.scss';\n\nconst ProfilePage = ({getProfile, user: {user, loading}, match}) => {\n  useEffect(() => {\n    getProfile(match.params.id);\n    // eslint-disable-next-line\n  }, [getProfile]);\n\n  return loading || user === null ? (\n    <Spinner type='page' width='75px' height='200px' />\n  ) : (\n    <Fragment>\n      <PageTitle title={`User ${user.username} - CLONE Stack Overflow`} />\n      <div id='mainbar' className='user-main-bar pl24 pt24'>\n        <div className='user-card'>\n          <div className='grid--cell s-navigation mb16'>\n            <Link\n              to='#'\n              className='s-navigation--item is-selected'\n              data-shortcut='P'\n            >\n              Profile\n            </Link>\n            <Link to='#' className='s-navigation--item' data-shortcut='A'>\n              Activity\n            </Link>\n          </div>\n          <UserSection user={user}/>\n        </div>\n        <div className='row-grid'>\n          <ExternalUserDetails/>\n          <UserActivity/>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nProfilePage.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {getProfile})(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}