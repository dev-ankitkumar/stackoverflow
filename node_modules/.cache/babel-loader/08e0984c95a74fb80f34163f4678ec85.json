{"ast":null,"code":"import { GET_COMMENTS, COMMENT_ERROR, ADD_COMMENT, DELETE_COMMENT } from './comments.types';\nconst initialState = {\n  comments: [],\n  loading: true,\n  error: {}\n};\nexport default function comments() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COMMENTS:\n      return { ...state,\n        comments: action.payload,\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        comments: [action.payload, ...state.comments],\n        loading: false\n      };\n\n    case DELETE_COMMENT:\n      return { ...state,\n        comments: state.comments.filter(answer => answer.id !== action.payload),\n        loading: false\n      };\n\n    case COMMENT_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/redux/comments/comments.reducer.js"],"names":["GET_COMMENTS","COMMENT_ERROR","ADD_COMMENT","DELETE_COMMENT","initialState","comments","loading","error","state","action","type","payload","filter","answer","id"],"mappings":"AAAA,SACEA,YADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,SAASF,QAAT,GAAgD;AAAA,MAA9BG,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAFZ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,QAAQ,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,QAA1B,CAFL;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKH,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeO,MAAf,CACPC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcL,MAAM,CAACE,OADzB,CAFL;AAKLL,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKL,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAFT;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOE,KAAP;AA5BJ;AA8BD","sourcesContent":["import {\n  GET_COMMENTS,\n  COMMENT_ERROR,\n  ADD_COMMENT,\n  DELETE_COMMENT,\n} from './comments.types';\n\nconst initialState = {\n  comments: [],\n  loading: true,\n  error: {},\n};\n\nexport default function comments(state = initialState, action) {\n  switch (action.type) {\n    case GET_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        comments: [action.payload, ...state.comments],\n        loading: false,\n      };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(\n          (answer) => answer.id !== action.payload\n        ),\n        loading: false,\n      };\n    case COMMENT_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}