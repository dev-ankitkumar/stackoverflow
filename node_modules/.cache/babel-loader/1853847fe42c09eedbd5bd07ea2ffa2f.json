{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/Post/Post.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPost } from '../../redux/posts/posts.actions';\nimport PageTitle from '../../components/PageTitle/PageTitle.component';\nimport LinkButton from '../../components/LinkButton/LinkButton.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport AnswerSection from './AnswerSection/AnswerSection.component';\nimport QuestionSection from './QuestionSection/QuestionSection.component';\nimport './Post.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    getPost,\n    post: {\n      post,\n      loading\n    },\n    match\n  } = _ref;\n  useEffect(() => {\n    getPost(match.params.id); // eslint-disable-next-line\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: `${post.title} - CLONE Stack Overflow`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainbar\",\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-header fc-black-800 pl24\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LinkButton, {\n            text: 'Ask Question',\n            link: '/add/question',\n            type: 's-btn__primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-date fc-black-800 pl24\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fc-light\",\n            children: \"Asked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n            dateTime: moment(post.created_at).fromNow(true),\n            children: [moment(post.created_at).fromNow(true), \" ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-main pl24 pt16\",\n        children: [/*#__PURE__*/_jsxDEV(QuestionSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnswerSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/Post/Post.component.jsx"],"names":["React","useEffect","Fragment","moment","connect","PropTypes","getPost","PageTitle","LinkButton","Spinner","AnswerSection","QuestionSection","Post","post","loading","match","params","id","title","created_at","fromNow","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment} from 'react';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getPost} from '../../redux/posts/posts.actions';\n\nimport PageTitle from '../../components/PageTitle/PageTitle.component';\nimport LinkButton from '../../components/LinkButton/LinkButton.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport AnswerSection from './AnswerSection/AnswerSection.component';\nimport QuestionSection from './QuestionSection/QuestionSection.component';\n\nimport './Post.styles.scss';\n\nconst Post = ({getPost, post: {post, loading}, match}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n    // eslint-disable-next-line\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner type='page' width='75px' height='200px' />\n  ) : (\n    <Fragment>\n      <PageTitle title={`${post.title} - CLONE Stack Overflow`} />\n      <div id='mainbar' className='post'>\n        <div className='question-header fc-black-800 pl24'>\n          <h1>{post.title}</h1>\n          <div>\n            <LinkButton\n              text={'Ask Question'}\n              link={'/add/question'}\n              type={'s-btn__primary'}\n            />\n          </div>\n        </div>\n        <div className='question-date fc-black-800 pl24'>\n          <div className='grid-cell'>\n            <span className='fc-light'>Asked</span>\n            <time dateTime={moment(post.created_at).fromNow(true)}>\n              {moment(post.created_at).fromNow(true)} ago\n            </time>\n          </div>\n        </div>\n        <div className='question-main pl24 pt16'>\n          <QuestionSection/>\n          <AnswerSection/>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}