{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/components/Alert/Alert.component.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Alert.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = _ref => {\n  let {\n    alerts\n  } = _ref;\n  return alerts.length > 0 && alerts.map((alert, index) => {\n    if (alert.alertType === 'success') {\n      return /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"alert s-notice s-notice__success s-notice__important\",\n        role: \"alert\",\n        children: alert.msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"alert s-notice s-notice__danger s-notice__important\",\n        role: \"alert\",\n        children: alert.msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this);\n    }\n  });\n};\n\n_c = Alert;\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/components/Alert/Alert.component.jsx"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","index","alertType","msg","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,qBAAP;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC5B,SAAOA,MAAM,CAACC,MAAP,GAAgB,CAAhB,IACLD,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,QAAID,KAAK,CAACE,SAAN,KAAoB,SAAxB,EAAmC;AACjC,0BACE;AAAmB,QAAA,SAAS,EAAC,sDAA7B;AAAoF,QAAA,IAAI,EAAC,OAAzF;AAAA,kBACGF,KAAK,CAACG;AADT,SAAYF,KAAZ;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACL,0BACE;AAAmB,QAAA,SAAS,EAAC,qDAA7B;AAAmF,QAAA,IAAI,EAAC,OAAxF;AAAA,kBACGD,KAAK,CAACG;AADT,SAAYF,KAAZ;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAdD,CADF;AAiBD,CAlBD;;KAAML,K;AAoBNA,KAAK,CAACQ,SAAN,GAAkB;AAChBP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AADR,CAAlB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AADoB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport './Alert.styles.scss';\n\nconst Alert = ({ alerts }) => {\n  return alerts.length > 0 &&\n    alerts.map((alert, index) => {\n      if (alert.alertType === 'success') {\n        return (\n          <aside key={index} className=\"alert s-notice s-notice__success s-notice__important\" role=\"alert\">\n            {alert.msg}\n          </aside>\n        )\n      } else {\n        return (\n          <aside key={index} className=\"alert s-notice s-notice__danger s-notice__important\" role=\"alert\">\n            {alert.msg}\n          </aside>\n        )\n      }\n    }\n  )\n}\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}