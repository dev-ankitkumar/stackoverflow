{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/components/MobileSideBar/MobileSideBar.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ReactComponent as Hamburger } from \"../../assets/LogoGlyphMd.svg\";\nimport { ReactComponent as Stack } from \"../../assets/LogoMd.svg\";\nimport { ReactComponent as GlobalIcon } from \"../../assets/Globe.svg\";\nimport \"./MobileSideBar.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SidebarUI = _ref => {\n  let {\n    isOpen,\n    ...rest\n  } = _ref;\n  const classes = [\"Sidebar\", isOpen ? \"is-open\" : \"\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"aria-hidden\": !isOpen,\n    className: classes.join(\" \"),\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_c = SidebarUI;\n\nSidebarUI.Overlay = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"SidebarOverlay\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 32\n}, this);\n\nSidebarUI.Content = _ref2 => {\n  let {\n    width = \"20rem\",\n    isRight = false,\n    ...rest\n  } = _ref2;\n  const classes = [\"SidebarContent\", isRight ? \"is-right\" : \"\"];\n  const style = {\n    width,\n    height: \"100%\",\n    top: 0,\n    right: isRight ? `-${width}` : \"auto\",\n    left: !isRight ? `-${width}` : \"auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.join(\" \"),\n    style: style,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\nconst MobileSideBar = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  function openSidebar() {\n    let isOp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    setIsOpen(isOp);\n  }\n\n  const {\n    hasOverlay,\n    isRight\n  } = props;\n  return /*#__PURE__*/_jsxDEV(SidebarUI, {\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(Hamburger, {\n      onClick: openSidebar,\n      className: \"ham\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SidebarUI.Content, {\n      isRight: isRight,\n      onClick: () => openSidebar(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-logo\",\n        children: /*#__PURE__*/_jsxDEV(Stack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-bar-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            exact: true,\n            activeClassName: \"active\",\n            className: \"home-link\",\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"public-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title fc-light\",\n              children: \"PUBLIC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              activeClassName: \"active\",\n              className: \"icon-link\",\n              to: \"/questions\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(GlobalIcon, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 10\n                }, this), \"Stack Overflow\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              activeClassName: \"active\",\n              className: \"link\",\n              to: \"/tags\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              activeClassName: \"active\",\n              className: \"link\",\n              to: \"/users\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              activeClassName: \"active\",\n              className: \"link\",\n              to: \"/jobs\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"teams-tabs\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title fc-light\",\n              children: \"TEAMS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), hasOverlay ? /*#__PURE__*/_jsxDEV(SidebarUI.Overlay, {\n      onClick: () => openSidebar(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this) : false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MobileSideBar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c2 = MobileSideBar;\nexport default MobileSideBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SidebarUI\");\n$RefreshReg$(_c2, \"MobileSideBar\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/components/MobileSideBar/MobileSideBar.component.jsx"],"names":["React","useState","NavLink","ReactComponent","Hamburger","Stack","GlobalIcon","SidebarUI","isOpen","rest","classes","join","Overlay","props","Content","width","isRight","style","height","top","right","left","MobileSideBar","setIsOpen","openSidebar","isOp","hasOverlay"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { ReactComponent as Hamburger } from \"../../assets/LogoGlyphMd.svg\";\nimport { ReactComponent as Stack } from \"../../assets/LogoMd.svg\";\nimport { ReactComponent as GlobalIcon } from \"../../assets/Globe.svg\";\n\nimport \"./MobileSideBar.styles.scss\";\n\nconst SidebarUI = ({ isOpen, ...rest }) => {\n\tconst classes = [\"Sidebar\", isOpen ? \"is-open\" : \"\"];\n\n\treturn (\n\t\t<div aria-hidden={!isOpen} className={classes.join(\" \")} {...rest} />\n\t);\n};\n\nSidebarUI.Overlay = (props) => <div className=\"SidebarOverlay\" {...props} />;\n\nSidebarUI.Content = ({ width = \"20rem\", isRight = false, ...rest }) => {\n\tconst classes = [\"SidebarContent\", isRight ? \"is-right\" : \"\"];\n\tconst style = {\n\t\twidth,\n\t\theight: \"100%\",\n\t\ttop: 0,\n\t\tright: isRight ? `-${width}` : \"auto\",\n\t\tleft: !isRight ? `-${width}` : \"auto\",\n\t};\n\n\treturn <div className={classes.join(\" \")} style={style} {...rest} />;\n};\n\nconst MobileSideBar = (props) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tfunction openSidebar(isOp = true) {\n\t\tsetIsOpen(isOp);\n\t}\n\n\tconst { hasOverlay, isRight } = props;\n\n\treturn (\n\t\t<SidebarUI isOpen={isOpen}>\n\t\t\t<Hamburger onClick={openSidebar} className=\"ham\" />\n\n\t\t\t<SidebarUI.Content\n\t\t\t\tisRight={isRight}\n\t\t\t\tonClick={() => openSidebar(false)}\n\t\t\t>\n\t\t\t\t<div className=\"content-logo\">\n\t\t\t\t\t<Stack />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content-inner\">\n\t\t\t\t\t<div className=\"side-bar-tabs\">\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\t\t\tclassName=\"home-link\"\n\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>Home</p>\n\t\t\t\t\t\t</NavLink>\n\n\t\t\t\t\t\t<div className=\"public-tabs\">\n\t\t\t\t\t\t\t<p className=\"title fc-light\">PUBLIC</p>\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\t\t\t\tclassName=\"icon-link\"\n\t\t\t\t\t\t\t\tto=\"/questions\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<GlobalIcon className=\"icon\" />\n\t\t\t\t\t\t\t\t\tStack Overflow\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\tto=\"/tags\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p>Tags</p>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\tto=\"/users\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p>Users</p>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\tto=\"/jobs\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p>Jobs</p>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"teams-tabs\">\n\t\t\t\t\t\t\t<p className=\"title fc-light\">TEAMS</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</SidebarUI.Content>\n\t\t\t{hasOverlay ? (\n\t\t\t\t<SidebarUI.Overlay onClick={() => openSidebar(false)} />\n\t\t\t) : false}\n\t\t</SidebarUI>\n\t);\n};\n\nexport default MobileSideBar;\n"]},"metadata":{},"sourceType":"module"}