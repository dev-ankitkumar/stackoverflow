{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/Post/AnswerSection/AnswerItem/AnswerItem.component.jsx\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { deleteAnswer } from '../../../../redux/answers/answers.actions';\nimport { ReactComponent as UpVote } from '../../../../assets/ArrowUpLg.svg';\nimport { ReactComponent as DownVote } from '../../../../assets/ArrowDownLg.svg';\nimport UserCard from '../../../../components/UserCard/UserCard.component';\nimport './AnswerItem.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnswerItem = _ref => {\n  let {\n    deleteAnswer,\n    answer: {\n      body,\n      user_id,\n      gravatar,\n      id,\n      created_at,\n      username\n    },\n    post: {\n      post\n    },\n    auth\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-cell\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vote-up\",\n            title: \"This answer is useful (click again to undo)\",\n            children: /*#__PURE__*/_jsxDEV(UpVote, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vote-count fc-black-500\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"vote-down\",\n            title: \"This answer is not useful (click again to undo)\",\n            children: /*#__PURE__*/_jsxDEV(DownVote, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-content fc-black-800\",\n          dangerouslySetInnerHTML: {\n            __html: body\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-btns\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-menu\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: \"answer-links\",\n                title: \"short permalink to this question\",\n                to: \"/\",\n                children: \"share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"answer-links\",\n                title: \"Follow this question to receive notifications\",\n                to: \"/\",\n                children: \"follow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), !auth.loading && auth.isAuthenticated && user_id === auth.user.id && /*#__PURE__*/_jsxDEV(Link, {\n                className: \"s-link s-link__danger\",\n                style: {\n                  paddingLeft: '4px'\n                },\n                title: \"Delete the answer\",\n                onClick: e => deleteAnswer(id),\n                to: `/questions/${post.id}`,\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UserCard, {\n            created_at: created_at,\n            user_id: user_id,\n            gravatar: gravatar,\n            username: username,\n            dateType: 'answered',\n            backgroundColor: 'transparent'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AnswerItem;\nAnswerItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  answer: PropTypes.object.isRequired,\n  deleteAnswer: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  deleteAnswer\n})(AnswerItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerItem\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/Post/AnswerSection/AnswerItem/AnswerItem.component.jsx"],"names":["React","Fragment","connect","PropTypes","Link","deleteAnswer","ReactComponent","UpVote","DownVote","UserCard","AnswerItem","answer","body","user_id","gravatar","id","created_at","username","post","auth","__html","loading","isAuthenticated","user","paddingLeft","e","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {deleteAnswer} from '../../../../redux/answers/answers.actions';\n\nimport {ReactComponent as UpVote} from '../../../../assets/ArrowUpLg.svg';\nimport {ReactComponent as DownVote} from '../../../../assets/ArrowDownLg.svg';\nimport UserCard from '../../../../components/UserCard/UserCard.component';\n\nimport './AnswerItem.styles.scss';\n\nconst AnswerItem = ({\n  deleteAnswer,\n  answer: {body, user_id, gravatar, id, created_at, username},\n  post: {post},\n  auth,\n}) => {\n  return (\n    <Fragment>\n      <div className='answer-layout'>\n        <div className='vote-cell'>\n          <div className='vote-container'>\n            <button\n              className='vote-up'\n              title='This answer is useful (click again to undo)'\n            >\n              <UpVote className='icon' />\n            </button>\n            <div className='vote-count fc-black-500'>0</div>\n            <button\n              className='vote-down'\n              title='This answer is not useful (click again to undo)'\n            >\n              <DownVote className='icon' />\n            </button>\n          </div>\n        </div>\n        <div className='answer-item'>\n          <div className='answer-content fc-black-800' dangerouslySetInnerHTML={{__html: body}}>\n          </div>\n          <div className='answer-actions'>\n            <div className='action-btns'>\n              <div className='answer-menu'>\n                <Link\n                  className='answer-links'\n                  title='short permalink to this question'\n                  to='/'\n                >\n                  share\n                </Link>\n                <Link\n                  className='answer-links'\n                  title='Follow this question to receive notifications'\n                  to='/'\n                >\n                  follow\n                </Link>\n                {!auth.loading &&\n                  auth.isAuthenticated &&\n                  user_id === auth.user.id && (\n                    <Link\n                      className='s-link s-link__danger'\n                      style={{paddingLeft: '4px'}}\n                      title='Delete the answer'\n                      onClick={(e) => deleteAnswer(id)}\n                      to={`/questions/${post.id}`}\n                    >\n                      delete\n                    </Link>\n                  )}\n              </div>\n            </div>\n            <UserCard\n              created_at={created_at}\n              user_id={user_id}\n              gravatar={gravatar}\n              username={username}\n              dateType={'answered'}\n              backgroundColor={'transparent'}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nAnswerItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  answer: PropTypes.object.isRequired,\n  deleteAnswer: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, {deleteAnswer})(AnswerItem);\n"]},"metadata":{},"sourceType":"module"}