{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/PostForm/PostForm.component.jsx\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport AskWidget from './AskWidget/AskWidget.component';\nimport AskForm from './AskForm/AskForm.component';\nimport Footer from \"../../components/Footer/Footer.component\";\nimport './PostForm.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = _ref => {\n  let {\n    auth: {\n      isAuthenticated,\n      loading\n    }\n  } = _ref;\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  return loading === null ? /*#__PURE__*/_jsxDEV(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-form-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-form-headline fc-black-800\",\n            children: \"Ask a public question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postform\",\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(AskForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-panel\",\n              children: /*#__PURE__*/_jsxDEV(AskWidget, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostForm;\nPostForm.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(PostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/pages/PostForm/PostForm.component.jsx"],"names":["React","Fragment","connect","Redirect","PropTypes","Spinner","AskWidget","AskForm","Footer","PostForm","auth","isAuthenticated","loading","width","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,OAAO,wBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAwC;AAAA,MAAvC;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB;AAAP,GAAuC;;AACvD,MAAI,CAACD,eAAL,EAAsB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOC,OAAO,KAAK,IAAZ,gBACL,QAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aAAjC;AAAA,mCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AA0BD,CA/BD;;KAAMJ,Q;AAiCNA,QAAQ,CAACK,SAAT,GAAqB;AACnBJ,EAAAA,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC;AADJ,CAArB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADsB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACe,eAAD,EAAkB,IAAlB,CAAP,CAA+BR,QAA/B,CAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport AskWidget from './AskWidget/AskWidget.component';\nimport AskForm from './AskForm/AskForm.component';\nimport Footer from \"../../components/Footer/Footer.component\";\n\nimport './PostForm.styles.scss';\n\nconst PostForm = ({auth: {isAuthenticated, loading}}) => {\n  if (!isAuthenticated) {\n    return <Redirect to='/login' />;\n  }\n\n  return loading === null ? (\n    <Spinner type='page' width='75px' height='200px' />\n  ) : (\n    <Fragment>\n      <div className='post-form-container'>\n        <div className='post-form-content'>\n          <div className='post-form-header'>\n            <div className='post-form-headline fc-black-800'>\n              Ask a public question\n            </div>\n          </div>\n          <div className='post-form-section'>\n            <div className='postform' style={{width: '100%'}}>\n              <AskForm />\n            </div>\n            <aside>\n              <div className='right-panel'>\n                <AskWidget />\n              </div>\n            </aside>\n          </div>\n        </div>\n      </div>\n      <Footer/>\n    </Fragment>\n  );\n};\n\nPostForm.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, null)(PostForm);\n"]},"metadata":{},"sourceType":"module"}