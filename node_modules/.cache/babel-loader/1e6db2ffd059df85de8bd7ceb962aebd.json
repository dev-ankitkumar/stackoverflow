{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/components/PostItem/PostItem.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport htmlSubstring from '../../services/htmlSubstring';\nimport injectEllipsis from '../../services/injectEllipsis';\nimport UserCard from '../UserCard/UserCard.component';\nimport TagBadge from '../TagBadge/TagBadge.component';\nimport './PostItem.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = _ref => {\n  let {\n    post: {\n      id,\n      title,\n      body,\n      username,\n      gravatar,\n      user_id,\n      answer_count,\n      comment_count,\n      views,\n      created_at,\n      tags\n    }\n  } = _ref;\n\n  const answerVoteUp = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vote answer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"vote-count fc-green-500\",\n      children: answer_count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"count-text\",\n      children: \"answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n\n  const answerVoteDown = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vote\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"vote-count\",\n      children: answer_count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"count-text\",\n      children: \"answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container fc-black-500\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"vote-count\",\n            children: comment_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count-text\",\n            children: \"comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), answer_count > 0 ? answerVoteUp : answerVoteDown, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"vote-count\",\n            children: tags.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count-text\",\n            children: \"tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count-text\",\n            children: [views, \" views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/questions/${id}`,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brief\",\n        dangerouslySetInnerHTML: {\n          __html: injectEllipsis(htmlSubstring(body, 200))\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), tags.map((tag, index) => /*#__PURE__*/_jsxDEV(TagBadge, {\n        tag_name: tag.tagname,\n        size: 's-tag',\n        float: 'left'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(UserCard, {\n        created_at: created_at,\n        user_id: user_id,\n        gravatar: gravatar,\n        username: username,\n        float: 'right',\n        backgroundColor: 'transparent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostItem;\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default connect(null)(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/home/ankit/Desktop/Ankit/May/may-10/Stackoverflow-Clone-Frontend/src/components/PostItem/PostItem.component.jsx"],"names":["React","connect","PropTypes","Link","htmlSubstring","injectEllipsis","UserCard","TagBadge","PostItem","post","id","title","body","username","gravatar","user_id","answer_count","comment_count","views","created_at","tags","answerVoteUp","answerVoteDown","length","__html","map","tag","index","tagname","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport htmlSubstring from '../../services/htmlSubstring'\nimport injectEllipsis from '../../services/injectEllipsis'\n\nimport UserCard from '../UserCard/UserCard.component';\nimport TagBadge from '../TagBadge/TagBadge.component';\n\nimport './PostItem.styles.scss';\n\nconst PostItem = ({\n  post: {\n    id,\n    title,\n    body,\n    username,\n    gravatar,\n    user_id,\n    answer_count,\n    comment_count,\n    views,\n    created_at,\n    tags,\n  },\n}) => {\n  const answerVoteUp = (\n    <div className='vote answer'>\n      <span className='vote-count fc-green-500'>{answer_count}</span>\n      <div className='count-text'>answers</div>\n    </div>\n  );\n\n  const answerVoteDown = (\n    <div className='vote'>\n      <span className='vote-count'>{answer_count}</span>\n      <div className='count-text'>answers</div>\n    </div>\n  );\n\n  return (\n    <div className='posts'>\n      <div className='stats-container fc-black-500'>\n        <div className='stats'>\n          <div className='vote'>\n            <span className='vote-count'>{comment_count}</span>\n            <div className='count-text'>comments</div>\n          </div>\n          {answer_count > 0 ? answerVoteUp : answerVoteDown}\n          <div className='vote'>\n            <span className='vote-count'>{tags.length}</span>\n            <div className='count-text'>tags</div>\n          </div>\n          <div className='vote'>\n            <div className='count-text'>{views} views</div>\n          </div>\n        </div>\n      </div>\n      <div className='summary'>\n        <h3>\n          <Link to={`/questions/${id}`}>{title}</Link>\n        </h3>\n        <div className='brief' dangerouslySetInnerHTML={{__html: injectEllipsis(htmlSubstring(body, 200))}}></div>\n        {tags.map((tag, index) => (\n          <TagBadge key={index} tag_name={tag.tagname} size={'s-tag'} float={'left'} />\n        ))}\n        <UserCard\n          created_at={created_at}\n          user_id={user_id}\n          gravatar={gravatar}\n          username={username}\n          float={'right'}\n          backgroundColor={'transparent'}\n        />\n      </div>\n    </div>\n  );\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default connect(null)(PostItem);\n"]},"metadata":{},"sourceType":"module"}